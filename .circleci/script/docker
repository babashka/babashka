#!/usr/bin/env bash

set -eo pipefail

image_name="babashka/babashka"
image_tag=$(cat resources/BABASHKA_VERSION)
platform=${PLATFORM:-"linux-amd64"}
latest_tag="latest"

if [[ $image_tag =~ SNAPSHOT$ ]]; then
    echo "This is a snapshot version"
    snapshot="true"
else
    echo "This is a non-snapshot version"
    snapshot="false"
fi

if [ -z "$CIRCLE_PULL_REQUEST" ] && [ "$CIRCLE_BRANCH" = "master" ]; then
    echo "Building $platform Docker image $image_name:$image_tag"
    echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
    tar zxvf  "/tmp/release/babashka-${image_tag}-${platform}.tar.gz"
    docker build -t "$image_name" -f Dockerfile.ci .
    docker tag "$image_name:$latest_tag" "$image_name:$image_tag"
    rm -f bb

    # alpine doesn't provide upstream arm64 images yet
    if [[ $snapshot == "false" && $platform == "linux-amd64" ]]; then
        tar zxvf  "/tmp/release/babashka-${image_tag}-${platform}-static.tar.gz"
        docker build -t "$image_name:alpine" -f Dockerfile.alpine .
        docker tag "$image_name:alpine" "$image_name:$image_tag-alpine"
    fi

    # we only update latest when it's not a SNAPSHOT version
    if [ "false" = "$snapshot" ]; then
        echo "Pushing image $image_name:$latest_tag"
        docker push "$image_name:$latest_tag"
        echo "Pushing image $image_name:alpine"
        docker push "$image_name:alpine"
    fi
    # we update the version tag, even if it's a SNAPSHOT version
    echo "Pushing image $image_name:$image_tag"
    docker push "$image_name:$image_tag"
    if [[ $snapshot == "false" ]]; then
        docker push "$image_name:$image_tag-alpine"
    fi
else
    echo "Not publishing Docker image"
fi

exit 0;
