;; * pipe:

;; (let [ls (conch/proc "ls" ".")
;;       grep (conch/proc "grep" "README")
;;       _ (conch/stream-to ls :out (:in grep))
;;       _ (conch/done grep)
;;       out (conch/stream-to-string grep :out)]
;;   (println out))

;; (let [grep (conch/proc "grep" "README")
;;       in (str/join "\n" *in*)
;;       _ (conch/feed-from-string grep in)
;;       _ (conch/done grep)
;;       out (conch/stream-to-string grep :out)]
;;   out)


;; (let [ls (conch/proc "ls" ".")
;;       grep (conch/proc "grep" "README")
;;       _ (conch/stream-to ls :out (:in grep))
;;       _ (conch/done grep)
;;       out (conch/stream-to-string grep :out)]
;;   (println out))



#_(defn pipe [p1 p2]
  (conch/stream-to p1 :out (:in p2))
  ;; (conch/done p2)
  p2)

#_(defn out->str [p]
  (conch/done p)
  (conch/stream-to-string p :out))

(proc/defcommands ls grep bb)

(def bb-proc (bb "--socket-repl" "1666"))
(def nc-proc (proc/proc "rlwrap" "nc" "127.0.0.1" "1666"))

(proc/in-str nc-proc "(+ 1 2 3)\n")
(proc/eof nc-proc)
(let [s (proc/out-str nc-proc)]
  (conch/destroy nc-proc)
  s)

;; (-> (proc/pipe
;;      (ls ".")
;;      (grep "README"))
;;     proc/out-str)
